import packaging
import glob

debug=int(ARGUMENTS.get("debug",0))

env=Environment(tools=["default","textfile",git_tag_version,get_architecture_from_dpkg])
if debug:
	env.Append(CCFLAGS="-ggdb")
env.Append(CCFLAGS="-std=c++11")
env.Append(CCFLAGS="-DBOOST_ALL_DYN_LINK")


sources=[
"shop/BasketListWidget.cpp",
"shop/BasketAddTemplate.cpp",
"shop/BasketFormTemplate.cpp",
"shop/Shop.cpp",
"shop/InputItemWidget.cpp",
"shop/Item.cpp",
"shop/ItemGroupCheckbox.cpp",
#"shop/Order.cpp",

"user/User.cpp",
"user/Session.cpp",

"application.cpp",
"sharebuy.cpp",
]

print(sources)
libs=[
"wt",
"wthttp",
"boost_system",
"boost_thread",
"boost_filesystem",
"boost_log",
"boost_log_setup",
"pthread",
"boost_signals",
"boost_regex",
"boost_program_options",

"wtdbo",
"wtdbosqlite3"
]

sharebuy=env.Program(target="sharebuy",source=sources, LIBS=libs)
Default(sharebuy)

# package
shop_configs = glob.glob("../shops/*")
print("x",shop_configs)
package=packaging.make_debian("sharebuy",[
	(sharebuy,"/usr/bin/sharebuy")]+
	[(File(sc),"/usr/share/sharebuy/shops/{}".format(sc)) for sc in shop_configs]
	, env)
env.Alias("package",package)
